#!/bin/bash
set -eu

mkdir -p /var/vcap/sys/log/bind9 \
         /var/vcap/sys/run/slave
exec >> /var/vcap/sys/log/bind9/slave.log 2>&1


PATH=$PATH:/var/vcap/packages/bind9/sbin
PATH=$PATH:/var/vcap/packages/bind9/bin
export PATH

datadir=/var/vcap/sys/run/slave/data
 config=/var/vcap/jobs/slave/config/slave.conf
pidfile=/var/vcap/sys/run/slave/slave.pid

pids=
if [[ -f $pidfile ]]; then
  pids=$(cat $pidfile)
fi


case $1 in
  start)
    if test -n "$pids" && kill -0 $pids >/dev/null 2>&1; then
      echo "[$(date)] bind seems to be running already (pid $pids, from $pidfile)!"
      exit 1
    fi

    # make sure we have a data dir that isn't vcap:vcap owned
    mkdir -p ${datadir}

    # check configuration
    echo "[$(date)] checking named slave configuration..."
    named-checkconf $config
    echo "[$(date)] named slave configuration OK"
    echo

    echo $$ > $pidfile
    echo "[$(date)] bind slave starting up (pid $$)"
    exec named -g -c $config
    ;;

  stop)
    if [[ -z "$pids" ]]; then
      pids=$(pgrep named)
    fi

    n=250
    echo "[$(date)] sending named procs ($pids) a SIGTERM..."
    kill -TERM $pids || true
    while test -n "$pids" && kill -0 $pids >/dev/null 2>&1; do
      if [[ $n < 1 ]]; then
        echo "[$(date)] named is still running; sending a SIGKILL..."
        kill -9 $pids || true
        sleep 0.5
        break
      fi
      sleep 0.1
      n=$(( $n - 1 ))
    done
    rm -f $pidfile
    ;;

  *)
    echo "Usage: slave {start|stop}"
    ;;

esac
exit 0
