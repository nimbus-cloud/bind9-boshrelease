# bind slave configuration

# allow only trusted nets/hosts to recurse
acl trusted {
  localhost;
  localnets;
<% p('recursion.allow_from', []).each do |acl| %>
  <%= acl %>;
<% end %>
};

# sane defaults
options {
  pid-file "/var/vcap/sys/run/slave/slave.pid";
  directory "/var/vcap/sys/run/slave/data";
  version "nope";
  allow-transfer { "none"; };
  allow-notify { <%= link('master-dns').p('network') %>; };
<% if p('recursion.forwarders', []).to_a.length > 0 %>
  recursion yes;
  allow-recursion { trusted; };

  forwarders {
<% p('recursion.forwarders', []).to_a.each do |svr| %>
    <%= svr %>;
<% end %>
  };
<% else %>
  recursion no;
  allow-recursion { "none"; };
<% end %>

<% p('bind_options', {}).each_pair do |key,value| %>
  <%= "#{key} #{value}" %>;
<% end %>
};

<% link('master-dns').p('zones', {}).each do |domain, config| %>
zone "<%= domain %>" {
  type slave;
  masters { <%= link('master-dns').instances.collect { |x| x.address }.join(',') %>; };
  file "<%= domain %>.db";
};
<% end %>

<% link('master-dns').p('forward', []).each do |zone| %>
zone "<%= zone['name'] %>" in {
  type forward;
  forward only;
  forwarders {
    <% (zone['forwarders'] || []).each do |srv| -%>
      <%= srv %>;
    <% end -%>
  };
};
<% end %>
